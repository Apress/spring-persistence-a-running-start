<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

    

    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
        p:dataSource-ref="dataSource" 
        p:lobHandler-ref="defaultLobHandler">
       <property name="annotatedClasses">
            <list>
                <value>com.smartpants.artwork.domain.ArtData</value>
                <value>com.smartpants.artwork.domain.ArtData_Gallery</value>
                <value>com.smartpants.artwork.domain.ArtData_Storage</value>
                <value>com.smartpants.artwork.domain.ArtData_Thumbnail</value>
                <value>com.smartpants.artwork.domain.ArtEntity</value>
                <value>com.smartpants.artwork.domain.Category</value>
                <value>com.smartpants.artwork.domain.Comment</value>
                <value>com.smartpants.artwork.domain.Exhibition</value>
                <value>com.smartpants.artwork.domain.Person</value>
            </list>
        </property>

        <property name="hibernateProperties">
            <value>
                hibernate.dialect=${hibernate.dialect}
                hibernate.jdbc.batch_size=${hibernate.jdbc.batch_size}
                hibernate.c3p0.max_size=${hibernate.c3p0.max_size}
                hibernate.c3p0.min_size=${hibernate.c3p0.min_size}
                hibernate.c3p0.timeout=${hibernate.c3p0.timeout}
                hibernate.c3p0.max_statements=${hibernate.c3p0.max_statements}
                hibernate.c3p0.idle_test_period=${hibernate.c3p0.idle_test_period}
                hibernate.c3p0.acquire_increment=${hibernate.c3p0.acquire_increment}
                hibernate.c3p0.validate=${hibernate.c3p0.validate}
                hibernate.cache.provider_class=${hibernate.cache.provider_class}
                hibernate.connection.provider_class=${hibernate.connection.provider_class}
                hibernate.show_sql=${hibernate.show_sql}
                hibernate.hbm2ddl.auto=update
                hibernate.cache.use_second_level_cache=true
                hibernate.cache.use_query_cache=true
            </value>
        </property>
    </bean>

     <!-- Database LOB Handling -->

	<bean id="defaultLobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" />

	<tx:annotation-driven transaction-manager="transactionManager" />

	<!--
		Transaction manager for a single Hibernate SessionFactory (alternative
		to JTA)
	-->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />

	<!-- Read in daos from the hibernate package -->
	<context:component-scan base-package="com.smartpants.artwork.dao.hibernate" />

</beans>